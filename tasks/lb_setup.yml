---

- name: deletegate tasks to the ansible runner
  block:

    - name: create a private key
      community.crypto.openssl_privatekey:
        path: /tmp/private.key

#    - name: create ca certificate
#      community.crypto.x509_certificate:
#        path: /tmp/ca.pem
#        privatekey_path: /tmp/private.key
#        provider: selfsigned

    - name: create demo csr
      community.crypto.openssl_csr_pipe:
        privatekey_path: /tmp/private.key
        common_name: demo01.ursi.int
        organization_name: ursolutions
        subject_alt_name:
          - "DNS:demo02.ursi.int"
          - "DNS:demo03.ursi.int"
      register: csr

    - name: create demo certificate
      community.crypto.x509_certificate:
        path: /tmp/certificate.pem
        csr_content: "{{ csr.csr }}"
        privatekey_path: /tmp/private.key
        provider: selfsigned

  delegate_to: localhost
  run_once: true

- name: ensure tasks run only on selected os releases
  block:

    - name: install nginx
      ansible.builtin.package:
        name: nginx
        state: present

    - name: copy ssl certificate
      ansible.builtin.copy:
        src: /tmp/certificate.pem
        dest: /etc/pki/tls/certs/certificate.pem
        owner: root
        group: root
        mode: "0644"

    - name: copy private key
      ansible.builtin.copy:
        src: /tmp/private.key
        dest: /etc/pki/tls/private/private.key
        owner: root
        group: root
        mode: "0600"

    - name: create virtual host configuration
      ansible.builtin.copy:
        content: |
          upstream phpmyadmin {
              ip_hash;
              server demo02.ursi.int;
              server demo03.ursi.int;
          }
          server {
              listen 80;
              listen 443 ssl;
              server_name demo01.ursi.int;
              ssl on;
              ssl_certificate /etc/pki/tls/certs/certificate.pem;
              ssl_certificate_key /etc/pki/tls/private/private.key;
              location / {
                  proxy_pass http://phpmyadmin;
                  proxy_set_header Host $host;
                  proxy_set_header X-Real-IP $remote_addr;
                  proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
                  proxy_set_header X-Forwarded-Proto $scheme;
              }
          }
        dest: /etc/nginx/conf.d/phpmyadmin.conf
        owner: root
        group: root
        mode: "0644"

  when: ansible_distribution == "RedHat"

...
